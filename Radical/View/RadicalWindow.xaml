<Window x:Class="Radical.RadicalWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Radical"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:Converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf" 
        xmlns:d3="clr-namespace:InteractiveDataDisplay.WPF;assembly=InteractiveDataDisplay.WPF"
        xmlns:nlopt="clr-namespace:NLoptNet;assembly=NLoptNet"
        mc:Ignorable="d"
        Title="Radical" Height="600" Width="1000"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="12"
        FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
        Closing="RadicalWindow_Closing">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />

                <!-- primary color -->
                <ResourceDictionary>
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.BlueGrey.Primary.xaml" />
                    </ResourceDictionary.MergedDictionaries>

                    <SolidColorBrush x:Key="PrimaryHueLightBrush" Color="{StaticResource Primary100}"/>
                    <SolidColorBrush x:Key="PrimaryHueLightForegroundBrush" Color="{StaticResource Primary100Foreground}"/>
                    <SolidColorBrush x:Key="PrimaryHueMidBrush" Color="{StaticResource Primary500}"/>
                    <SolidColorBrush x:Key="PrimaryHueMidForegroundBrush" Color="{StaticResource Primary500Foreground}"/>
                    <SolidColorBrush x:Key="PrimaryHueDarkBrush" Color="{StaticResource Primary800}"/>
                    <SolidColorBrush x:Key="PrimaryHueDarkForegroundBrush" Color="{StaticResource Primary800Foreground}"/>
                </ResourceDictionary>

                <!-- secondary colour -->
                <ResourceDictionary>
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.DeepOrange.Accent.xaml" />
                    </ResourceDictionary.MergedDictionaries>

                    <SolidColorBrush x:Key="SecondaryAccentBrush" Color="#FF7043"/>
                    <SolidColorBrush x:Key="SecondaryAccentForegroundBrush" Color="{StaticResource Accent400Foreground}"/>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>

            <Storyboard x:Key="MenuOpen">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="GridMenu">
                    <EasingDoubleKeyFrame KeyTime="0" Value="60"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="505"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="VarTree">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="505"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetName="TreeBorder" Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="MenuClose">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="GridMenu">
                    <EasingDoubleKeyFrame KeyTime="0" Value="505"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="60"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="VarTree">
                    <EasingDoubleKeyFrame KeyTime="0" Value="505"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetName="TreeBorder" Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Collapsed}"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="SettingsOpen">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="SettingsHeader">
                    <EasingDoubleKeyFrame KeyTime="0" Value="60"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="200"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="Settings">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="200"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetName="SettingsBorder" Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="SettingsClose">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="SettingsHeader">
                    <EasingDoubleKeyFrame KeyTime="0" Value="200"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="60"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="Settings">
                    <EasingDoubleKeyFrame KeyTime="0" Value="200"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetName="SettingsBorder" Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Collapsed}"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>
            <BooleanToVisibilityConverter x:Key="BoolToVisConverter" />
        </ResourceDictionary>

    </Window.Resources>

    <Window.Triggers>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ButtonOpenMenu">
            <BeginStoryboard Storyboard="{StaticResource MenuOpen}"></BeginStoryboard>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ButtonCloseMenu">
            <BeginStoryboard Storyboard="{StaticResource MenuClose}"></BeginStoryboard>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ButtonSettingsOpen">
            <BeginStoryboard Storyboard="{StaticResource SettingsOpen}"></BeginStoryboard>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ButtonSettingsClose">
            <BeginStoryboard Storyboard="{StaticResource SettingsClose}"></BeginStoryboard>
        </EventTrigger>
    </Window.Triggers>

    <Grid Name="MainGrid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="*" Name="GraphsColumn"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0" x:Name="GridMenu" HorizontalAlignment="Right" Margin="0,0,0,-0.2">
            <Grid.RowDefinitions>
                <RowDefinition Height="50"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0"  >
                <Button x:Name="ButtonCloseMenu"  Width="Auto" Height="50" HorizontalAlignment="Right" Background="{x:Null}" BorderBrush="{x:Null}" 
                            Visibility="Collapsed" Click="ButtonCloseMenu_Click">
                    <materialDesign:PackIcon Kind="ArrowLeft" Foreground="LightGray" Width="30" Height="30"></materialDesign:PackIcon>
                </Button>
                <Button x:Name="ButtonOpenMenu" Width="Auto" Height="50" HorizontalAlignment="Center" Background="{x:Null}" BorderBrush="{x:Null}"
                            Click="ButtonOpenMenu_Click">
                    <materialDesign:PackIcon Kind="Menu" Foreground="DarkGray" Width="30" Height="30" HorizontalAlignment="Center"></materialDesign:PackIcon>
                </Button>
            </Grid>
            <ScrollViewer x:Name="VarTree" Width="0" Grid.Row="1" VerticalScrollBarVisibility="Auto">
                <StackPanel>
                    <Border Background="{DynamicResource MaterialDesignDivider}"
                        Height="1"
                        HorizontalAlignment="Stretch"
                        SnapsToDevicePixels="True" />
                    <Expander Name ="VariablesExpander">
                        <Expander.Header>
                            <TextBlock FontSize="18">
                                Variables
                            </TextBlock>
                        </Expander.Header>
                        <StackPanel>
                            <Expander Name="SlidersExpander" Margin="10" Visibility="Visible">
                                <Expander.Header>
                                    <TextBlock FontSize="18" Foreground="Gray">
                                        Sliders                                      
                                    </TextBlock>
                                </Expander.Header>
                                <StackPanel  Name="Sliders" HorizontalAlignment="Stretch">
                                </StackPanel>
                            </Expander>
                            <Expander Name="GeometriesExpander" Margin="10" Visibility="Visible">
                                <Expander.Header>
                                    <TextBlock FontSize="18" Foreground="Gray">
                                        Geometries
                                    </TextBlock>
                                </Expander.Header>
                                <StackPanel Name="Geometries" HorizontalAlignment="Stretch">
                                </StackPanel>
                            </Expander>
                        </StackPanel>
                    </Expander>
                    <Border Background="{DynamicResource MaterialDesignDivider}"
                        Height="1"
                        HorizontalAlignment="Stretch"
                        SnapsToDevicePixels="True" />
                    <Expander Name="ConstraintsExpander" FontSize="18">
                        <Expander.Header>
                            <TextBlock FontSize="18">
                                Constraints
                            </TextBlock>
                        </Expander.Header>
                        <StackPanel Name="Constraints">
                        </StackPanel>
                    </Expander>
                    <Border Background="{DynamicResource MaterialDesignDivider}"
                        Height="1"
                        HorizontalAlignment="Stretch"
                        SnapsToDevicePixels="True" />
                    <Expander Name="PropertiesExpander" Visibility="Collapsed" FontSize="18">
                        <Expander.Header>
                            <TextBlock FontSize="18">
                                Properties
                            </TextBlock>
                        </Expander.Header>
                        <StackPanel Name="Properties">
                        </StackPanel>
                    </Expander>
                    <Border Background="{DynamicResource MaterialDesignDivider}"
                        Height="1"
                        HorizontalAlignment="Stretch"
                        SnapsToDevicePixels="True" />
                </StackPanel>
            </ScrollViewer>
            <Border x:Name="TreeBorder" Grid.Row="1" BorderBrush="Black" BorderThickness="0,0,0,0" Background="{x:Null}" Visibility="Collapsed"/>
        </Grid>

        <!--I eventually want to make this main container a stack panel, honestly I don't really know why but I do
        but for the sake of setting things up initially it will be a wrappanel -->
        <ScrollViewer Grid.Column="1" Name="GraphsScroller" Width="Auto" VerticalScrollBarVisibility="Auto">
            <StackPanel Name="GraphsContainer" HorizontalAlignment="Stretch">
                <StackPanel Name="MainBlock">
                    <!-- Panel for the Main Objective graph -->
                </StackPanel>
                <ItemsControl Name="ConstraintsGraphs">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Columns="{Binding Cols}">
                                <!-- Grid for the constraint graphs -->
                            </UniformGrid>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </StackPanel>
        </ScrollViewer>
        
        
        <Grid Grid.Column="2"  HorizontalAlignment="Right" Margin="0,0,0,-0.2">
            <Grid.RowDefinitions>
                <RowDefinition Height="50"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" x:Name="SettingsHeader">
                <StackPanel x:Name="SettingsClose"  Orientation="Horizontal" Visibility="Collapsed">
                    <Button x:Name="ButtonSettingsClose"  Height="50" HorizontalAlignment="Left" Background="{x:Null}" BorderBrush="{x:Null}" 
                            Visibility="Visible" Click="ButtonSettingsClose_Click">
                        <materialDesign:PackIcon Kind="ArrowRight" Foreground="LightGray" Width="30" Height="30"></materialDesign:PackIcon>
                    </Button>
                    <Button Height="50" HorizontalAlignment="Left" Background="{x:Null}" BorderBrush="{x:Null}" >
                        <materialDesign:PackIcon Kind="Export" Foreground="DarkGray" Width="30" Height="30"></materialDesign:PackIcon>
                    </Button>
                </StackPanel>
                <Button x:Name="ButtonSettingsOpen" Width="60" Height="50" HorizontalAlignment="Center" Background="{x:Null}" BorderBrush="{x:Null}"
                             Visibility="Visible" Click="ButtonSettingsOpen_Click">
                    <materialDesign:PackIcon Kind="DotsHorizontal" Foreground="DarkGray" Width="30" Height="30"></materialDesign:PackIcon>
                </Button>
            </Grid>

            <Grid  Width="0" Grid.Row="1" x:Name="Settings">
                <StackPanel Name="SettingsMenu">
                    <StackPanel.Resources>
                        <Style TargetType="{x:Type DockPanel}">
                            <Setter Property="Margin" Value="10,5"/>
                        </Style>
                        <Style BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}"  TargetType="{x:Type TextBox }">
                            <Setter Property="HorizontalContentAlignment"   Value="Right"></Setter>
                        </Style>
                        <Style BasedOn="{StaticResource MaterialDesignFloatingHintComboBox}"  TargetType="{x:Type ComboBox }">
                            <Setter Property="HorizontalContentAlignment"   Value="Right"></Setter>
                        </Style>
                    </StackPanel.Resources>

                </StackPanel>
            </Grid>
            <Border x:Name="SettingsBorder" Grid.Row="1" BorderBrush="Black" BorderThickness="0.1,0,0,0" Background="{x:Null}" Visibility="Collapsed"/>

            <Grid Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="20" Background="{x:Null}" >
                <Button x:Name="ButtonPlay" Click="ButtonPlay_Click" Width="40" Height="40"
                        Style="{StaticResource MaterialDesignFloatingActionButton}" 
                        materialDesign:ShadowAssist.ShadowDepth="Depth2" Background="{DynamicResource SecondaryAccentBrush}" BorderBrush="{DynamicResource SecondaryAccentBrush}">
                    <materialDesign:PackIcon Kind="Play" Height="32" Width="32" Foreground="{DynamicResource SecondaryAccentForegroundBrush}"/>
                </Button>
                <Button x:Name="ButtonPause" Click="ButtonPause_Click"  Visibility="Collapsed" Width="40" Height="40"
                        Style="{StaticResource MaterialDesignFloatingActionLightButton}"
                        materialDesign:ButtonProgressAssist.IsIndicatorVisible="True"
                        materialDesign:ButtonProgressAssist.IndicatorForeground="{DynamicResource SecondaryAccentForegroundBrush}"
                        materialDesign:ButtonProgressAssist.Value="-1"
                        materialDesign:ButtonProgressAssist.IsIndeterminate="True"
                        Background="{DynamicResource SecondaryAccentBrush}" BorderBrush="{DynamicResource SecondaryAccentBrush}">
                    <materialDesign:PackIcon Kind="Pause" Height="32" Width="32" Foreground="{DynamicResource SecondaryAccentForegroundBrush}"/>
                </Button>
            </Grid>
        </Grid>
    </Grid>

</Window>
