<Window x:Class="Radical.RadicalWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Radical"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:Converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf" 
        xmlns:d3="clr-namespace:InteractiveDataDisplay.WPF;assembly=InteractiveDataDisplay.WPF"
        xmlns:nlopt="clr-namespace:NLoptNet;assembly=NLoptNet"
        mc:Ignorable="d"
        Title="Radical" Height="600" Width="1000"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="12"
        FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
        Closing="RadicalWindow_Closing">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Storyboard x:Key="MenuOpen">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="GridMenu">
                    <EasingDoubleKeyFrame KeyTime="0" Value="60"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="505"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="VarTree">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="505"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetName="TreeBorder" Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="MenuClose">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="GridMenu">
                    <EasingDoubleKeyFrame KeyTime="0" Value="505"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="60"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="VarTree">
                    <EasingDoubleKeyFrame KeyTime="0" Value="505"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetName="TreeBorder" Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Collapsed}"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="SettingsOpen">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="SettingsHeader">
                    <EasingDoubleKeyFrame KeyTime="0" Value="60"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="200"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="Settings">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="200"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetName="SettingsBorder" Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="SettingsClose">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="SettingsHeader">
                    <EasingDoubleKeyFrame KeyTime="0" Value="200"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="60"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="Settings">
                    <EasingDoubleKeyFrame KeyTime="0" Value="200"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetName="SettingsBorder" Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Collapsed}"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>
            <BooleanToVisibilityConverter x:Key="BoolToVisConverter" />
        </ResourceDictionary>
       
    </Window.Resources>

    <Window.Triggers>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ButtonOpenMenu">
            <BeginStoryboard Storyboard="{StaticResource MenuOpen}"></BeginStoryboard>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ButtonCloseMenu">
            <BeginStoryboard Storyboard="{StaticResource MenuClose}"></BeginStoryboard>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ButtonSettingsOpen">
            <BeginStoryboard Storyboard="{StaticResource SettingsOpen}"></BeginStoryboard>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ButtonSettingsClose">
            <BeginStoryboard Storyboard="{StaticResource SettingsClose}"></BeginStoryboard>
        </EventTrigger>
    </Window.Triggers>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0" x:Name="GridMenu" HorizontalAlignment="Right" Margin="0,0,0,-0.2">
            <Grid.RowDefinitions>
                <RowDefinition Height="50"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0"  >
                <Button x:Name="ButtonCloseMenu"  Width="Auto" Height="50" HorizontalAlignment="Right" Background="{x:Null}" BorderBrush="{x:Null}" 
                            Visibility="Collapsed" Click="ButtonCloseMenu_Click">
                    <materialDesign:PackIcon Kind="ArrowLeft" Foreground="LightGray" Width="30" Height="30"></materialDesign:PackIcon>
                </Button>
                <Button x:Name="ButtonOpenMenu" Width="Auto" Height="50" HorizontalAlignment="Center" Background="{x:Null}" BorderBrush="{x:Null}"
                            Click="ButtonOpenMenu_Click">
                    <materialDesign:PackIcon Kind="Menu" Foreground="DarkGray" Width="30" Height="30" HorizontalAlignment="Center"></materialDesign:PackIcon>
                </Button>
            </Grid>
            <ScrollViewer x:Name="VarTree" Width="0" Grid.Row="1" VerticalScrollBarVisibility="Auto">
                <StackPanel>
                    <Border Background="{DynamicResource MaterialDesignDivider}"
                        Height="1"
                        HorizontalAlignment="Stretch"
                        SnapsToDevicePixels="True" />
                    <Expander Name ="VariablesExpander">
                        <Expander.Header>
                            <TextBlock FontSize="18">
                                Variables
                            </TextBlock>
                        </Expander.Header>
                        <StackPanel>
                            <Expander Name="SlidersExpander" Margin="10" Visibility="Visible">
                                <Expander.Header>
                                    <TextBlock FontSize="18" Foreground="Gray">
                                        Sliders                                      
                                    </TextBlock>
                                </Expander.Header>
                                <StackPanel  Name="Sliders" HorizontalAlignment="Stretch">
                                </StackPanel>
                            </Expander>
                            <Expander Name="GeometriesExpander" Margin="10" Visibility="Visible">
                                <Expander.Header>
                                    <TextBlock FontSize="18" Foreground="Gray">
                                        Geometries
                                    </TextBlock>
                                </Expander.Header>
                                <StackPanel Name="Geometries" HorizontalAlignment="Stretch">
                                </StackPanel>
                            </Expander>
                        </StackPanel>
                    </Expander>
                    <Border Background="{DynamicResource MaterialDesignDivider}"
                        Height="1"
                        HorizontalAlignment="Stretch"
                        SnapsToDevicePixels="True" />
                    <Expander Name="ConstraintsExpander" FontSize="18">
                        <Expander.Header>
                            <TextBlock FontSize="18">
                                Constraints
                            </TextBlock>
                        </Expander.Header>
                        <StackPanel Name="Constraints">
                        </StackPanel>
                    </Expander>
                    <Border Background="{DynamicResource MaterialDesignDivider}"
                        Height="1"
                        HorizontalAlignment="Stretch"
                        SnapsToDevicePixels="True" />
                    <Expander Name="PropertiesExpander" FontSize="18">
                        <Expander.Header>
                            <TextBlock FontSize="18">
                                Properties
                            </TextBlock>
                        </Expander.Header>
                        <StackPanel Name="Properties">
                        </StackPanel>
                    </Expander>
                    <Border Background="{DynamicResource MaterialDesignDivider}"
                        Height="1"
                        HorizontalAlignment="Stretch"
                        SnapsToDevicePixels="True" />
                </StackPanel>
            </ScrollViewer>
            <Border x:Name="TreeBorder" Grid.Row="1" BorderBrush="Black" BorderThickness="0,0,0.1,0" Background="{x:Null}" Visibility="Collapsed"/>
        </Grid>

        <Grid HorizontalAlignment="Center" Grid.Column="1" Margin="25,40">
            <d3:Chart Background="{x:Null}">
                <d3:LineGraph Name="Plotter" Description="History" Stroke="LimeGreen" StrokeThickness="1.5"></d3:LineGraph>
            </d3:Chart>
        </Grid>

        <Grid Grid.Column="3"  HorizontalAlignment="Right" Margin="0,0,0,-0.2">
            <Grid.RowDefinitions>
                <RowDefinition Height="50"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" x:Name="SettingsHeader">
                <StackPanel x:Name="SettingsClose"  Orientation="Horizontal" Visibility="Collapsed">
                    <Button x:Name="ButtonSettingsClose"  Height="50" HorizontalAlignment="Left" Background="{x:Null}" BorderBrush="{x:Null}" 
                            Visibility="Visible" Click="ButtonSettingsClose_Click">
                        <materialDesign:PackIcon Kind="ArrowRight" Foreground="LightGray" Width="20" Height="20"></materialDesign:PackIcon>
                    </Button>
                    <Button Height="50" HorizontalAlignment="Left" Background="{x:Null}" BorderBrush="{x:Null}" >
                        <materialDesign:PackIcon Kind="Export" Foreground="DarkGray" Width="20" Height="20"></materialDesign:PackIcon>
                    </Button>
                </StackPanel>
                <Button x:Name="ButtonSettingsOpen" Width="60" Height="50" HorizontalAlignment="Center" Background="{x:Null}" BorderBrush="{x:Null}"
                             Visibility="Visible" Click="ButtonSettingsOpen_Click">
                    <materialDesign:PackIcon Kind="DotsHorizontal" Foreground="DarkGray" Width="20" Height="20"></materialDesign:PackIcon>
                </Button>
            </Grid>

            <Grid  Width="0" Grid.Row="1" x:Name="Settings">
                <StackPanel>
                    <StackPanel.Resources>
                        <Style TargetType="{x:Type DockPanel}">
                            <Setter Property="Margin" Value="10,5"/>
                        </Style>
                        <Style BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}"  TargetType="{x:Type TextBox }">
                            <Setter Property="HorizontalContentAlignment"   Value="Right"></Setter>
                        </Style>
                        <Style BasedOn="{StaticResource MaterialDesignFloatingHintComboBox}"  TargetType="{x:Type ComboBox }">
                            <Setter Property="HorizontalContentAlignment"   Value="Right"></Setter>
                        </Style>
                    </StackPanel.Resources>
                    <DockPanel>
                        <materialDesign:PackIcon Kind="Refresh" Foreground="DarkGray" VerticalAlignment="Bottom"></materialDesign:PackIcon>
                        <ComboBox materialDesign:HintAssist.Hint="Refresh Mode" HorizontalAlignment="Right" SelectedIndex="0" ItemsSource="{Binding Source={local:EnumBindingSource {x:Type local:RefreshMode}}}"
                                  SelectedValue="{Binding Mode, Mode=OneWayToSource}">
                        </ComboBox>
                    </DockPanel>
                    <DockPanel>
                        <materialDesign:PackIcon Kind="SortNumeric" Foreground="DarkGray" VerticalAlignment="Bottom"></materialDesign:PackIcon>
                        <TextBox Text="{Binding Niterations, Mode=OneWayToSource, FallbackValue=1000 }" materialDesign:HintAssist.Hint="Number of Iterations"
                                 HorizontalAlignment="Right"
                                 PreviewTextInput="TextBox_PreviewTextInput_Int" PreviewMouseDown="TextBox_PreviewMouseDown" PreviewKeyDown="TextBox_PreviewKeyDown" PreviewGotKeyboardFocus="TextBox_GotFocus" PreviewLostKeyboardFocus="TextBox_LostFocus"
                                 ></TextBox>
                    </DockPanel>
                    <DockPanel>
                        <materialDesign:PackIcon Kind="ChartLine"  Foreground="DarkGray" VerticalAlignment="Bottom"></materialDesign:PackIcon>
                        <TextBox Name="ConvergeText" Text="{Binding ConvCrit, Mode=OneWayToSource, FallbackValue=0.001 }" materialDesign:HintAssist.Hint="Relative Convergence Limit"
                                 HorizontalAlignment="Right"
                                 PreviewTextInput="TextBox_PreviewTextInput_Float" PreviewMouseDown="TextBox_PreviewMouseDown" PreviewKeyDown="TextBox_PreviewKeyDown" PreviewGotKeyboardFocus="TextBox_GotFocus" PreviewLostKeyboardFocus="TextBox_LostFocus"
                                 ></TextBox>
                    </DockPanel>
                    <DockPanel>
                        <materialDesign:PackIcon Kind="Factory" Foreground="DarkGray" VerticalAlignment="Bottom"></materialDesign:PackIcon>
                        <ComboBox HorizontalAlignment="Right"  materialDesign:HintAssist.Hint="Algorithm" IsEditable="True" IsReadOnly="True"
                                  ItemsSource="{Binding AvailableAlgs, Mode=OneWay}" 
                                  SelectedItem="{Binding PrimaryAlgorithm, Mode=OneWayToSource, FallbackValue={x:Static nlopt:NLoptAlgorithm.LN_COBYLA}}"
                                  SelectionChanged="ComboBox_SelectionChanged">
                        </ComboBox>
                    </DockPanel>
                    <DockPanel>
                        <materialDesign:PackIcon Name="SecAlgIcon" Kind="Calculator" Foreground="DarkGray" VerticalAlignment="Bottom" Visibility="Collapsed"></materialDesign:PackIcon>
                        <ComboBox Name="SecondaryAlgorithm" Visibility="Collapsed"  HorizontalAlignment="Right" materialDesign:HintAssist.Hint="Secondary Algorithm" IsEditable="True" IsReadOnly="True">
                        </ComboBox>
                    </DockPanel>
                </StackPanel>
            </Grid>
            <Border x:Name="SettingsBorder" Grid.Row="1" BorderBrush="Black" BorderThickness="0.1,0,0,0" Background="{x:Null}" Visibility="Collapsed"/>
        </Grid>

        <Grid Grid.Column="3" HorizontalAlignment="Right" Background="{x:Null}">
            <Grid VerticalAlignment="Bottom" HorizontalAlignment="Center">
                <Button x:Name="ButtonPlay" Click="ButtonPlay_Click" Width="30" Height="30" Margin="15"
                        Style="{StaticResource MaterialDesignFloatingActionButton}" 
                        materialDesign:ShadowAssist.ShadowDepth="Depth2"
                        Content="{materialDesign:PackIcon Play}" />
                <Button x:Name="ButtonPause" Click="ButtonPause_Click"  Visibility="Collapsed" Width="30" Height="30" Margin="15"
                        Style="{StaticResource MaterialDesignFloatingActionLightButton}"
                        materialDesign:ButtonProgressAssist.IsIndicatorVisible="True"
                        materialDesign:ButtonProgressAssist.Value="-1"
                        materialDesign:ButtonProgressAssist.IsIndeterminate="True"
                        Content="{materialDesign:PackIcon Pause}" />
            </Grid>
        </Grid>

    </Grid>

</Window>
